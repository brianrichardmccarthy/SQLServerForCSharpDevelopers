# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- dev

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- stage: BuildAll
  jobs:
  - job: BuildSQLServerForCSharpDevelopers
  displayName: 'Build - SQLServerForCSharpDevelopers'
  steps:
  
  - task: PowerShell@2
  displayName: 'Get Agent IP Address'
  
  - task: GitVersion@5
  displayName: 'Git Version'
  inputs:
    runtime: 'core'
    updateAssemblyInfo: true
    preferBundledVersion: false
    configFilePath: '.azure/pipelines/GitVersion.yml'
  - task: UseDotNet@2
      displayName: 'Install .NET Core'
      inputs:
        packageType: sdk
        version: 5.0.1
        installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'SonarCloud'
      organization: 'brianrichardmccarthy'
      scannerMode: 'MSBuild'
      projectKey: 'SQLServerForCSharpDevelopersKey'
      projectName: 'SQLServerForCSharpDevelopers'
      extraProperties: |
        sonar.exclusions=**/*.Tests/*
        sonar.exclusions=**/lib/**,**/obj/**,**/*.dll
        sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
        sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
  - task: DotNetCoreCLI@2
  displayName: 'Restore Solution'
  inputs:
    command: 'restore'
    projects: 'SQLServerForCSharpDevelopers.sln'
    verbosityRestore: 'Normal'

  - task: DotNetCoreCLI@2
    displayName: Build Solution
    inputs:
      command: 'build'
      projects: 'SQLServerForCSharpDevelopers.sln'
      arguments: '--configuration $(buildConfiguration) --no-restore'
      verbosityRestore: 'Normal'
  - task: DotNetCoreCLI@2
      displayName: Run Tests
      inputs:
        command: 'test'
        projects: '*.Tests/*.Tests.csproj'
        arguments: '--configuration $(buildConfiguration) --no-restore /p:CollectCoverage=true "/p:CoverletOutputFormat=\"opencover,Cobertura\""'
        verbosityRestore: 'Normal'
        publishTestResults: true
  - task: PublishCodeCoverageResults@1
    displayName: Publish Cobertura Results
    inputs:
      codeCoverageTool: 'cobertura'
      summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
